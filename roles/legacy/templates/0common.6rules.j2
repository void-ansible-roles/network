*filter
:INPUT {{ network_input_policy }} [0:0]
:FORWARD {{ network_forward_policy }} [0:0]
:OUTPUT {{ network_output_policy }} [0:0]
-A INPUT -i lo -j ACCEPT
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p tcp --dport 22 -j ACCEPT
-A OUTPUT -p tcp --dport 22 -j ACCEPT
-A INPUT -p icmpv6 -j ACCEPT

-A OUTPUT -o lo -j ACCEPT
-A OUTPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A OUTPUT -p icmpv6 -j ACCEPT

{% for interface in network_interfaces %}
{% if interface.mode6 != 'disabled' %}
# DNS for {{ interface.name | replace("default", ansible_default_ipv6.interface|default(ansible_default_ipv6.interface)) }}
{% if interface.resolvermode6=='dhcp' %}
-A OUTPUT -o {{ interface.name | replace("default", ansible_default_ipv6.interface|default(ansible_default_ipv6.interface)) }} -p udp --dport 53 -j ACCEPT
-A OUTPUT -o {{ interface.name | replace("default", ansible_default_ipv6.interface|default(ansible_default_ipv6.interface)) }} -p tcp --dport 53 -j ACCEPT
{% elif interface.resolvermode6=='static' %}
{% for resolver in interface.resolvers6 | default(network_6dns) %}
-A OUTPUT -o {{ interface.name | replace("default", ansible_default_ipv6.interface|default(ansible_default_ipv6.interface)) }} -p udp -d {{ resolver }} --dport 53 -j ACCEPT
-A OUTPUT -o {{ interface.name | replace("default", ansible_default_ipv6.interface|default(ansible_default_ipv6.interface)) }} -p tcp -d {{ resolver }} --dport 53 -j ACCEPT
{% endfor%}
{% endif %}
{% endif %}
{% endfor %}

COMMIT
